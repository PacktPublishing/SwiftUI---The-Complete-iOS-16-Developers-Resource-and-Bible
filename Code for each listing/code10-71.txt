struct ContentView: View {
   @Environment(\.managedObjectContext) var dbContext
   @FetchRequest(sortDescriptors: [], predicate: nil, animation: .default) var listOfBooks: FetchedResults<Books>

   var body: some View {
      NavigationStack {
         List {
            ForEach(listOfBooks) { book in
               RowBook(book: book)
            }
            .onDelete(perform: { indexes in
               Task(priority: .high) {
                  await deleteBook(indexes: indexes)
               }
            })
         }
         .navigationBarTitle("Books")
         .toolbar {
            ToolbarItem(placement: .navigationBarTrailing) {
               NavigationLink(destination: InsertBookView(), label: {
                  Image(systemName: "plus")
               })
            }
         }
      }
   }
   func deleteBook(indexes: IndexSet) async {
      await dbContext.perform {
         for index in indexes {
            dbContext.delete(listOfBooks[index])
         }
         do {
            try dbContext.save()
         } catch {
            print("Error deleting objects")
         }
      }
   }
}